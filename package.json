{
  "name": "javascript-graphql",
  "scripts": {
    "nuke": "docker stop pg-docker-nasa && docker rm pg-docker-nasa && docker volume rm pgdata && rm -rf prisma/migrations",
    "launchDocker": "docker run --name pg-docker-nasa -e POSTGRES_PASSWORD=docker -d -p 5432:5432 -v pgdata:/var/lib/postgresql/data postgres:latest",
    "createDB": "npx prisma2 migrate save --name 'init' --experimental && npx prisma2 migrate up --experimental",
    "generate": "npx prisma2 generate",
    "postinstall": "npm -s run generate",
    "seed": "node -r esm prisma/seed",
    "dev": "npx prisma2 studio --experimental",
    "start": "node -r esm ./src/server"
  },
  "dependencies": {
    "@prisma/client": "2.0.0-preview022",
    "apollo-server": "^2.14.2",
    "esm": "^3.2.25",
    "graphql": "14.6.0",
    "nexus": "^0.12.0-rc.13",
    "nexus-prisma": "^0.10.0"
  },
  "devDependencies": {
    "prisma2": "2.0.0-preview022"
  },
  "prettier": {
    "singleQuote": true,
    "semi": false,
    "trailingComma": "all"
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "description": "This example shows how to implement an **GraphQL server (SDL-first) with Node.js** based on [Prisma Client](https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md), [apollo-server](https://www.npmjs.com/package/apollo-server) and the [nexus-prisma](https://github.com/prisma-labs/nexus-prisma) plugin. It is based on a PostGreSQL database running inside Docker.",
  "version": "1.0.0",
  "main": "index.js",
  "author": "",
  "license": "ISC"
}
